use RODOMAIOR



select * from ConhecimentosTransporte where NumConhecto = 45277  and CodUF = 'MT' 

exec VerificaCTe 10000024803

select * from RODOMAIOR_GSe.dbo.cte where Sequencial = 10000024803
--delete  from RODOMAIOR_GSe.dbo.cte where Sequencial = 10000024803
--UPDATE Rodomaior_GSe.dbo.cte set Status = 0 where Sequencial = 10000024803

select XML_Enviado, infAdFisco,* from Rodomaior_GSe.dbo.cte where Sequencial = 10000024803	
--UPDATE Rodomaior_GSe.dbo.cte set infAdFisco = 'ICMS DIFERIDO CONF. ART.37, INCISO I, ANEXO VII DO RICMS/MT DEC. 2.212/2014 COMPLEMENTO DO CTE 45169 REFERENTE A DEMORA NA DESCARGA AUTORIZADO PELO THIAGO LOGISTICA ITERUM' where Sequencial = 10000024803	
--exec Grava_CTe 10000024803


select SituacaoConhecto,* from ConhecimentosTransporte where SituacaoConhecto like '%Subs%'
select SituacaoConhecto,* from ConhecimentosTransporte where NumConhecto = 520500 and CodUF = 'GO' 
--UPDATE ConhecimentosTransporte set SituacaoConhecto = 'Substituído' where Sequencial = 310000013845  --Emitido

select SituacaoConhecto,* from ConhecimentosTransporte where SituacaoConhecto like '%Emi%'
select SituacaoConhecto,* from ConhecimentosTransporte where NumConhecto = 7686  and CodUF = 'GO' 
--UPDATE ConhecimentosTransporte set SituacaoConhecto = 'Emitido' where Sequencial = 220000021105  --Complemento



--blk

--  CREATE PROCEDURE [dbo].[CorrigeMDFe]     AS    BEGIN     SET NOCOUNT ON;        --LNC-29/09/2023: corrigindo status de Eventos de MDFE criados ou alterados de forma equivocada: status = 0 onde o MDFe já esteja cancelado (5) ou encerrado (9)   --select mdfe.Sequencial, mdfe.CodManifestoCarga, ev.status, mdfe.[Status], ev.dhEvento, mdfe.dhEmi       update RODOMAIOR_GSe.dbo.Eventos_MDFe set status = mdfe.[Status]      from RODOMAIOR_GSe.dbo.Eventos_MDFe ev      join RODOMAIOR_GSe.dbo.MDFe mdfe on mdfe.Sequencial = ev.Sequencial      where ev.status = 0  --not in (1,2,5,9)           and mdfe.[Status] in (9,5)        --MDFEs que estão sem o LOG de Autorização (22 ou 32) -> atualizando o Status para 0 para poder reenviar.   UPDATE RODOMAIOR_GSe.dbo.MDFe SET status = 0, CodUsuarioAlteracao = 10001, CodFilialAlteracao = 'CG', DataAlteracao = GETDATE()   --SELECT mvoe.NumOrdemEmbarque, mdfe.*   FROM RODOMAIOR_GSe.dbo.MDFe mdfe   INNER JOIN MDFeViagem_OrdemEmbarque mvoe ON mvoe.SeqViagem = mdfe.CodManifestoCarga   LEFT OUTER JOIN RODOMAIOR_GSe.dbo.MDFe_LOG aut ON aut.Sequencial = mdfe.Sequencial AND aut.codLog = 22 AND aut.status = 1   LEFT OUTER JOIN RODOMAIOR_GSe.dbo.MDFe_LOG aut2 ON aut2.Sequencial = mdfe.Sequencial AND aut2.codLog = 32 AND aut2.status = 1   WHERE mdfe.dhEmi >= GETDATE()-10 AND mdfe.Status = 1 AND aut.ID IS NULL AND aut2.ID IS NULL     --MDFEs que estão com Status 7 e cujo último LOG seja o 10 (Envio), e que esteja assim há pelo menos 2 minutos (paradão!) -> mudando o status para 0 para recomeçar o envio!   ;WITH Parados AS    (    SELECT REJ.Sequencial, REJ.cStat, DATEDIFF(SECOND,REJ.dhLog,GETDATE()) AS Tempo     FROM RODOMAIOR_GSe.dbo.MDFe_LOG REJ WITH (NOLOCK)     INNER JOIN RODOMAIOR_GSe.dbo.MDFe MDFe WITH (NOLOCK) ON MDFe.Sequencial = REJ.Sequencial    WHERE MDFe.Status = 7 AND REJ.codLog = 10 AND REJ.status = 0 AND MDFe.verProc = 'GS-e Versao 3.0' AND CONVERT(VARCHAR(8),MDFe.DataCriacao,112) >= CONVERT(VARCHAR(8),GETDATE()-1,112)     AND REJ.ID = (SELECT MAX(L1.ID) FROM RODOMAIOR_GSe.dbo.MDFe_LOG L1 WITH (NOLOCK) WHERE L1.Sequencial = REJ.Sequencial)     GROUP BY REJ.Sequencial, MDFe.UF, MDFe.serie, MDFe.nMDF, MDFe.dhEmi, REJ.dhLog, REJ.cStat   )   UPDATE RODOMAIOR_GSe.dbo.MDFe SET status = 0, CodUsuarioAlteracao = 10001, CodFilialAlteracao = 'CG', DataAlteracao = GETDATE()   FROM RODOMAIOR_GSe.dbo.MDFe mdfe   INNER JOIN Parados ON Parados.Sequencial = mdfe.Sequencial   WHERE Tempo >= 120 --> 2 minutos     --LNC-20/10/2022 -> RETIRADO DO AR! DESNECESSÁRIO E PODE CAUSAR PROBLEMAS!   --Eventos de MDFe que estejam rejeitados sem status de retorno (cStat do LOG = NULL) -> mudando o status do evento para 0 para reprocessar o mesmo!   --UPDATE RODOMAIOR_GSe.dbo.Eventos_MDFe SET Status = 0   ----SELECT *    --FROM RODOMAIOR_GSe.dbo.Eventos_MDFe ev   --INNER JOIN RODOMAIOR_GSe.dbo.MDFe mdfe ON mdfe.Sequencial = ev.Sequencial_MDFe   --INNER JOIN RODOMAIOR_GSe.dbo.MDFe_LOG ult ON ult.Sequencial = mdfe.Sequencial AND ult.codLog = 51 AND ult.cStat IS NULL AND ult.status = 2 AND ult.ID = (SELECT MAX(ultmax.ID) FROM RODOMAIOR_GSe.dbo.MDFe_LOG ultmax WHERE ultmax.Sequencial = mdfe.Sequencial)   --WHERE ev.dhEvento >= GETDATE()-1   -- AND ev.Status = 2     --Eventos de MDFe que estejam rejeitados (status 2) e código de retorno 108 (Serviço Paralisado Momentaneamente) há 10 minutos ou mais -> mudando o status do evento para 0 para reenviar o mesmo!   UPDATE RODOMAIOR_GSe.dbo.Eventos_MDFe SET Status = 0   --SELECT *    FROM RODOMAIOR_GSe.dbo.Eventos_MDFe ev   INNER JOIN RODOMAIOR_GSe.dbo.MDFe mdfe ON mdfe.Sequencial = ev.Sequencial_MDFe   INNER JOIN RODOMAIOR_GSe.dbo.MDFe_LOG ult ON ult.Sequencial = mdfe.Sequencial AND ult.codLog = 52 AND ult.cStat = 108 AND ult.status = 2 AND ult.ID = (SELECT MAX(ultmax.ID) FROM RODOMAIOR_GSe.dbo.MDFe_LOG ultmax WHERE ultmax.Sequencial = mdfe.Sequencial)   WHERE ev.Status = 2 AND DATEDIFF(MINUTE,ev.dhEvento,GETDATE()) >= 10     --MDFe com status 2 (rejeitado), porém com o último LOG sendo do tipo 0 ou 10 ou 11 (não enviado corretamente)   UPDATE RODOMAIOR_GSe.dbo.MDFe SET Status = 0   --SELECT *    FROM RODOMAIOR_GSe.dbo.MDFe mdfe   INNER JOIN RODOMAIOR_GSe.dbo.MDFe_LOG ult ON ult.Sequencial = mdfe.Sequencial AND ult.codLog IN (0,10,11) AND ult.cStat IS NULL AND ult.status = 0 AND ult.ID = (SELECT MAX(ultmax.ID) FROM RODOMAIOR_GSe.dbo.MDFe_LOG ultmax WHERE ultmax.Sequencial = mdfe.Sequencial)   WHERE mdfe.Status = 2     --LNC-06/05/2018 -> Eventos de MDFe que estejam rejeitados (status 2) e código de retorno 297 (Assinatura difere do calculado) -> mudando o status do evento para 0 para reenviar o mesmo!   UPDATE RODOMAIOR_GSe.dbo.Eventos_MDFe SET Status = 0   --SELECT *    FROM RODOMAIOR_GSe.dbo.Eventos_MDFe ev   INNER JOIN RODOMAIOR_GSe.dbo.MDFe mdfe ON mdfe.Sequencial = ev.Sequencial_MDFe   INNER JOIN RODOMAIOR_GSe.dbo.MDFe_LOG ult ON ult.Sequencial = mdfe.Sequencial AND ult.codLog = 52 AND ult.cStat = 297 AND ult.status = 2 AND ult.ID = (SELECT MAX(ultmax.ID) FROM RODOMAIOR_GSe.dbo.MDFe_LOG ultmax WHERE ultmax.Sequencial = mdfe.Sequencial)   WHERE ev.Status = 2     --LNC-05/02/2019 - MANHÃ (TecnoFix)   if (select COUNT(*) from RODOMAIOR_GSe.dbo.Eventos_MDFe where status = 0 and datediff(minute,datacriacao,getdate()) > 2) > 0 begin    --Declara variável para o corpo da mensagem    DECLARE @msg VARCHAR(200)    SET @msg = "VER URGENTE: Evento de MDF-e com STATUS = 0 há mais de 2 minutos. Sequencial MDFe: " + CONVERT(VARCHAR(12),(select TOP 1 Sequencial_MDFe from RODOMAIOR_gse.dbo.Eventos_MDFe where status = 0 and datediff(minute,datacriacao,getdate()) > 2))    EXEC msdb..sp_send_dbmail      @IMPORTANCE = "HIGH",     @RECIPIENTS = "laerciocoelho@gmail.com;emanuelgsti@gmail.com",       @SUBJECT = "RODOMAIOR -> Evento de MDF-e com Problemas !!!",     @BODY_FORMAT = "HTML",     @BODY = @msg    --UPDATE TOP(1) RODOMAIOR_GSe.dbo.Eventos_MDFe set Status = 8 WHERE status = 0 and datediff(minute,datacriacao,getdate()) > 2   end     --LNC-03/08/2021 -> SQL para exclusão automática de MDFEs Rejeitados em casos que tenham sido refeitos e os novos estejam autorizados.   ;with lista as   (    select     ROW_NUMBER() OVER (ORDER BY mdfe.sequencial) AS ID,      'delete from RODOMAIOR_gse.dbo.mdfe where sequencial = ' + CONVERT(varchar(12),mdfe.Sequencial) AS SQL1    from RODOMAIOR_gse.dbo.mdfe mdfe    join mdfeviagem_ordemembarque mvoe on mvoe.seqviagem = mdfe.codmanifestocarga    left join mdfeviagem_ordemembarque mvoe_aut on mvoe_aut.numordemembarque = mvoe.numordemembarque and mvoe_aut.seqviagem <> mvoe.seqviagem     left join RODOMAIOR_gse.dbo.mdfe mdfe_aut on mdfe_aut.codmanifestocarga = mvoe_aut.seqviagem and mdfe_aut.status = 1    where mdfe.dhemi >= getdate()-1 and mdfe.status = 2   )   SELECT * INTO #tmplista FROM lista   if (select COUNT(*) from #tmplista) > 0 begin    declare @i smallint = 1, @sql varchar(200)    while @i <= (SELECT MAX(ID) FROM #tmplista) begin     select @sql = sql1 from #tmplista where ID = @i     --select @i, @sql     SET @i += 1     EXEC (@sql)    end   end   DROP TABLE #tmplista    END  

--wtf 324


exec MonitoraMDFe 79004021